---
#- name: install nfs package
#  package: 
#    name: nfs-utils
#    state: present
#  become: true
#  when: "'workers' in group_names"

- name: setup rke
  copy:
    src: rke_linux-amd64
    dest: /usr/bin/rke
    mode: u=+x,g=+x,o=+x
  become: true  
  when: "'k8s-master' in group_names"

- name: create rke directory
  file: 
    path: "{{docker_service_dir}}/rke/"
    state: directory
  when: "'k8s-master' in group_names"

- name: template cluster config file
  template:
    src: cluster.j2.yml
    dest: "{{docker_service_dir}}/rke/cluster.yml"
  when: "'k8s-master' in group_names"

#- name: template deployment addon manifests  
#  template:
#    src: "{{item}}"
#    dest: "{{docker_service_dir}}/rke/{{item | regex_replace('\\.j2','')}}"
#  loop: 
#    - blackbox-exporter.yml.j2
#    - kube-state-metrics.yml.j2
#    - prometheus.yml.j2
#    - dnsutils.yml.j2
#    - node-exporter.yml.j2
#  when: "'rancher' in group_names"

- name: Create a 2048-bit SSH key for user root
  user:
    name: root
    generate_ssh_key: yes
    ssh_key_bits: 2048
    ssh_key_file: .ssh/id_rsa

- name: correct sshd-config
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: "^.*PermitRootLogin.*", line: "PermitRootLogin yes" }
    - { regexp: "^.*AllowTcpForwarding.*", line: "AllowTcpForwarding yes" }
    - { regexp: "^.*PermitTunnel.*", line: "PermitTunnel yes" }

- name: restart sshd
  systemd:
    name: sshd
    state: restarted
    daemon_reload: yes

- name: fetch public-key
  fetch:
    src: /root/.ssh/id_rsa.pub
    dest: "{{ role_path }}/files/"
    flat: yes

- name: ssh-copy-id
  authorized_key:
    user: root
    state: present
    key: "{{ lookup('file', 'id_rsa.pub') }}"

- name: create cluster
  command: "rke up --config {{docker_service_dir}}/rke/cluster.yml"
  register: rke_up_out
  when: "'k8s-master' in group_names"

- name: show rke output
  debug:
    var: rke_up_out
  when: "'k8s-master' in group_names"  

- name: copy kubectl to master host
  copy:
    src: kubectl
    dest: /usr/bin/ 
    mode: u+x,g+x,o+x 
  become: true    
  when: "'k8s-master' in group_names"    

- name: download kube config
  fetch:
    src: "{{docker_service_dir}}/rke/kube_config_cluster.yml"
    dest: ~/.kube/config
    flat: yes
  when: "'k8s-master' in group_names"
...
